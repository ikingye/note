<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>8 月 on 叶王笔记</title>
    <link>https://ikingye.github.io/note/docs/live/diary/2020/08/</link>
    <description>Recent content in 8 月 on 叶王笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://ikingye.github.io/note/docs/live/diary/2020/08/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2020-08-07</title>
      <link>https://ikingye.github.io/note/docs/live/diary/2020/08/07/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note/docs/live/diary/2020/08/07/</guid>
      <description>2020 年 8 月 7 日（星期五） #  今日待办 #   servicemesher/istio-handbook    编程 #  GPU #  英伟达 Tesla T4 #  NVIDIA Tesla P40/P4/T4/V100 #   VNC #  Virtual Network Console 虚拟网络控制台
 Go #  buger/goreplay #  GoReplay is an open-source tool for capturing and replaying live HTTP traffic into a test environment in order to continuously test your system with real data.</description>
    </item>
    
    <item>
      <title>2020-08-06</title>
      <link>https://ikingye.github.io/note/docs/live/diary/2020/08/06/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note/docs/live/diary/2020/08/06/</guid>
      <description>2020 年 8 月 6 日（星期四） #  今日待办 #      编程 #  Container Runtime #  
Docker #  containerd #  对比与 Docker，Containerd 调用链更短，组件更少，更稳定，占用节点资源更少
cri-o #  rkt #  参考：
 容器引擎除了 Docker 之外还有哪些？   </description>
    </item>
    
    <item>
      <title>2020-08-05</title>
      <link>https://ikingye.github.io/note/docs/live/diary/2020/08/05/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note/docs/live/diary/2020/08/05/</guid>
      <description>2020 年 8 月 5 日（星期三） #  今日待办 #      编程 #  Service Worker #  A service worker is an event-driven worker registered against an origin and a path.
Service workers 本质上充当 Web 应用程序与浏览器之间的代理服务器，也可以在网络可用时作为浏览器和网络间的代理。
The Worker interface of the Web Workers API represents a background task that can be created via script, which can send messages back to its creator. Creating a worker is done by calling the Worker(&amp;ldquo;path/to/worker/script&amp;rdquo;) constructor.</description>
    </item>
    
    <item>
      <title>2020-08-04</title>
      <link>https://ikingye.github.io/note/docs/live/diary/2020/08/04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note/docs/live/diary/2020/08/04/</guid>
      <description>2020 年 8 月 4 日（星期二） #  今日待办 #      编程 #  Go #  是否 == nil #  参考：
 Why is my nil error value not equal to nil?   go 三个点 (three dots) #   函数声明：可变数量的函数参数 (func multiParam(args ...string)) 函数调用：切片直接传入到可变参数 (multiParam(names...) 或 append(stooges, lang...)) 数组：个数推测 (arr := [...]int{1, 2, 3}) go 命令: go test ./... 或 go get -v github.</description>
    </item>
    
    <item>
      <title>2020-08-03</title>
      <link>https://ikingye.github.io/note/docs/live/diary/2020/08/03/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note/docs/live/diary/2020/08/03/</guid>
      <description>2020 年 8 月 3 日（星期一） #  今日待办 #      编程 #  Go #  不支持重载 #   重载有用的情况不多，而且会造成困惑 不支持重载，实现更简单  参考：
 Why does Go not support overloading of methods and operators? 为什么 Golang (Go 语言) 不支持重载？   Python #  setuptools #  字典 #  float 作为 key #  参考：
 Why can a floating point dictionary key overwrite an integer key with the same value?</description>
    </item>
    
    <item>
      <title>2020-08-01</title>
      <link>https://ikingye.github.io/note/docs/live/diary/2020/08/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note/docs/live/diary/2020/08/01/</guid>
      <description>2020 年 8 月 1 日（星期六） #  今日待办 #      编程 #  Spring #   Spring Spring MVC Spring Framework Spring Boot Spring Cloud   EJB #  Enterprise JavaBean
EJB 3.0 #  EJB 3.0 几乎成为了一个全新的 API，与此前的数版可谓毫无相似度可言
 控制反转 #  控制反转（Inversion of Control，缩写为 IoC）
控制反转的常见方式：
 依赖注入（Dependency Injection，简称 DI） 依赖查找（Dependency Lookup)   敏捷软件开发 #  敏捷开发的方式：
 从 1991 年开始的迅速应用程序开发 从 1994 年开始的统一进程与动态系统开发法（DSDM） 从 1995 年开始的 Scrum 从 1996 年开始的水晶清透法 从 1996 年开始的极限编程 (Extreme programming，缩写为 XP) 从 1997 年开始的功能驱动开发  敏捷软件开发价值观 #   个体和互动：高于流程和工具 工作的软件：高于详尽的文档 客户合作：高于合同谈判 响应变化：高于遵循计划   Redis #  Redis 数据结构 #  zset #  参考：</description>
    </item>
    
  </channel>
</rss>