<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>7 月 on 叶王笔记</title>
    <link>https://ikingye.github.io/note/docs/live/diary/2020/07/</link>
    <description>Recent content in 7 月 on 叶王笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://ikingye.github.io/note/docs/live/diary/2020/07/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2020-07-07</title>
      <link>https://ikingye.github.io/note/docs/live/diary/2020/07/07/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note/docs/live/diary/2020/07/07/</guid>
      <description>2020 年 7 月 7 日（星期二） 今日待办     编程 Log  Go  sirupsen/logrus  uber-go/zap    Python  cool-RR/PySnooper    PHP  itsgoingd/clockwork  Clockwork - php dev tools in your browser - server-side component     C++  gabime/spdlog    Kubernetes  fluent/fluentd      Debug  Go  pprof go-delve/delve      Web 框架  PHP  laravel/laravel    Scala  playframework/playframework      Go interface 转 string // Strval 获取变量的字符串值 // 浮点型 3.</description>
    </item>
    
    <item>
      <title>2020-07-06</title>
      <link>https://ikingye.github.io/note/docs/live/diary/2020/07/06/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note/docs/live/diary/2020/07/06/</guid>
      <description>2020 年 7 月 6 日（星期一） 今日待办     编程 ELF 文件格式 Executable and Linkable Format，可执行连接格式， 是 UNIX 系统实验室（USL）作为应用程序二进制接口（Application Binary Interface，ABI）而开发和发布的。 扩展名为 elf。
主要有三种主要类型:
 适于连接的可重定位文件 (relocatable file)，可与其它目标文件一起创建可执行文件和共享目标文件。 适于执行的可执行文件 (executable file)，用于提供程序的进程映像，加载的内存执行。 共享目标文件 (shared object file)，连接器可将它与其它可重定位文件和共享目标文件连接成其它的目标文件，动态连接器又可将它与可执行文件和其它共享目标文件结合起来创建一个进程映像。  为了方便和高效，ELF 文件内容有两个平行的视角：
 程序连接角度 程序运行角度   Go go test GOTEST := $(GO) test GOPKGS := $$($(GO) list ./...| grep -vE &amp;#34;vendor&amp;#34;) test-case: $(GOTEST) -v -cover $(GOPKGS)  Hasura actions hasura/graphql-engine  Blazing fast, instant realtime GraphQL APIs on Postgres with fine grained access control, also trigger webhooks on database events.</description>
    </item>
    
    <item>
      <title>2020-07-05</title>
      <link>https://ikingye.github.io/note/docs/live/diary/2020/07/05/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note/docs/live/diary/2020/07/05/</guid>
      <description>2020 年 7 月 5 日（星期日） 今日待办     编程 Markdown 在表格单元格里换行 &amp;lt;br&amp;gt;
图片在右侧 &amp;lt;img align=&amp;#34;right&amp;#34; src=&amp;#34;https://demo.png&amp;#34;/&amp;gt; 行首空格 需要借助 HTML 转义字符在行首添加空格来实现，
 &amp;amp;ensp; 代表半角空格， &amp;amp;emsp; 代表全角空格。  参考：
 关于 Markdown 的一些奇技淫巧  </description>
    </item>
    
    <item>
      <title>2020-07-02</title>
      <link>https://ikingye.github.io/note/docs/live/diary/2020/07/02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note/docs/live/diary/2020/07/02/</guid>
      <description>2020 年 7 月 2 日（星期四） 今日待办     编程 软件设计原则  Don’t Repeat Yourself (DRY) Keep It Simple, Stupid (KISS) Program to an interface, not an implementation Command-Query Separation (CQS) – 命令 - 查询分离原则 You Ain’t Gonna Need It (YAGNI) Law of Demeter – 迪米特法则 面向对象的 S.O.L.I.D 原则 Common Closure Principle（CCP）– 共同封闭原则 Common Reuse Principle (CRP) – 共同重用原则 Hollywood Principle – 好莱坞原则 High Cohesion &amp;amp; Low/Loose coupling &amp;amp; – 高内聚， 低耦合 Convention over Configuration（CoC）– 惯例优于配置原则 Separation of Concerns (SoC) – 关注点分离 Design by Contract (DbC) – 契约式设计  参考：</description>
    </item>
    
    <item>
      <title>2020-07-01</title>
      <link>https://ikingye.github.io/note/docs/live/diary/2020/07/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note/docs/live/diary/2020/07/01/</guid>
      <description>2020 年 7 月 1 日（星期三） 今日待办     编程 SIP BYE vs CANCEL For short, BYE is used when the callee already pick up the phone and talk for a while, otherwise, CANCEL takes place.
参考：
 Introduction to SIP BYE, CANCEL and hop-by-hop messages [video]understanding difference between sip bye &amp;amp; cancel request   作用域  局部变量  在 C 语言中局部变量，只有执行了才会分配存储空间，只要离开作用域就会自动释放，C 语言的局部变量存储在栈区 Go 语言局部变量的生命周期和 C 语言一样   全局变量  在 C 语言中全局变量，只要程序一启动就会分配存储空间，只有程序关闭才会释放存储空间，C 语言的全局变量存储在静态区 (数据区) Go 语言全局变量的生命周期和 C 语言一样     如何学习 Web 安全  一切的安全问题都体现在 “输入输出” 上，一切的安全问题都存在于 “数据流” 的整个过程中。</description>
    </item>
    
  </channel>
</rss>